#!/usr/bin/env python3
#
# import_google_fonts
#
# Using Python rather than Ruby for the Protocol Buffer parser.
# https://github.com/protocolbuffers/protobuf/issues/6508#issuecomment-522165498
#

import glob
import os
import re
import sys
from google.protobuf import text_format
import gftools.fonts_public_pb2 as fonts_pb2
from jinja2 import Template


def parse_metadata(filename):
    # based off of
    # https://github.com/googlefonts/gftools/blob/2bfd4acd402b353aaeb46b991e6cad855001e4c8/Lib/gftools/util/google_fonts.py
    with open(filename) as f:
        meta = fonts_pb2.FamilyProto()
        text_format.Merge(f.read(), meta)
        return meta


TEMPLATE = Template(
    """cask '{{cask_name}}' do
  version :latest
  sha256 :no_check

  # github.com/google/fonts/ was verified as official when first introduced to the cask
  url {% if files|length > 1 %}'https://github.com/google/fonts/trunk/{{folder}}',
      using:      :svn,
      trust_cert: true{% else %}'https://github.com/google/fonts/raw/master/{{folder}}/{{files[0]}}'{% endif %}
  name '{{name}}'
  homepage 'https://fonts.google.com/specimen/{{name_path}}'
{% for file in files %}
  font '{{file}}'{% endfor %}
end

"""
)


def is_other_foundry(cask_path):
    with open(cask_path) as f:
        contents = f.read()

    return not re.search(r"url ['\"]https://github.com/google/fonts", contents)


def should_skip(cask_path):
    if os.path.exists(cask_path):
        # Cask already exists
        if is_other_foundry(cask_path):
            print("Other foundry:", cask_path)
            # don't overwrite it, per
            # https://github.com/Homebrew/homebrew-cask-fonts/blob/master/CONTRIBUTING.md#google-web-font-directory
            return True

    return False


def metadata_to_cask(meta_file, repo_dir):
    meta = parse_metadata(meta_file)

    name = meta.name
    # https://github.com/Homebrew/homebrew-cask-fonts/blob/master/CONTRIBUTING.md#converting-the-canonical-name-to-a-token
    token = name.lower().replace(" ", "-")
    cask_name = f"font-{token}"

    cask_path = os.path.join("Casks", f"{cask_name}.rb")
    if should_skip(cask_path):
        return

    folder = os.path.dirname(os.path.relpath(meta_file, start=repo_dir))
    name_path = name.replace(" ", "+")


    files = [font.filename for font in meta.fonts]
    files.sort()

    content = TEMPLATE.render(
        cask_name=cask_name, folder=folder, name=name, name_path=name_path, files=files,
    )

    with open(cask_path, "w") as f:
        f.write(content)


def run():
    if len(sys.argv) != 2:
        print(
            """Usage: ./import_google_fonts <path-to-repo>

    Download the or clone the repository from https://github.com/google/fonts, then provide the path to the script.
    """
        )
        sys.exit(1)

    repo_dir = sys.argv[1]
    meta_files = glob.glob(os.path.join(repo_dir, "**", "METADATA.pb"), recursive=True)

    for meta_file in meta_files:
        metadata_to_cask(meta_file, repo_dir)

run()
